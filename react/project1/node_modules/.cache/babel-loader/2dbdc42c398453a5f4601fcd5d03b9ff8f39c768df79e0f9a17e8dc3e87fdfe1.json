{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\UI developer\\\\react\\\\project1\\\\src\\\\hooks\\\\hook1.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Myhook1 = () => {\n  _s();\n  let citylist = [\"Bangalore\", \"Mumbai\", \"Pune\", \"Chennai\"];\n  const [Bangalore, Mumbai, a, b] = citylist;\n\n  //console.log(useState()); //[undefined,f]\n  //let [abc, xyz] = [undefined, f];\n  //abc ?\n  //xyz ?\n  //let[x, y] = [100, f];\n\n  let [counter, updateCounter] = useState(1100);\n  let [msg, updateMsg] = useState(\"\");\n  let [user, updateUser] = useState(['Kumar', 'Amar', 'Sunil', 'Sam']);\n  const one = () => {\n    updateCounter(counter + 10);\n    updateMsg(\"The Counter is incresed - \" + counter);\n  };\n  const two = () => {\n    updateCounter(counter - 5);\n    updateMsg(\"Sorry, The Counter is moving down - \" + counter);\n  };\n  const three = () => {\n    updateCounter(counter * 5);\n  };\n  const four = () => {\n    updateCounter(counter / 5);\n  };\n  let rate = 10;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" How to use useState() Hooks & What is State Management \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", citylist[0], \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", Bangalore, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", a, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", b, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" The Counter is : \", counter, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: one,\n      children: \" Click To + by 10 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: two,\n      children: \" Click To - by 5 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: three,\n      children: \" Click To * by 5 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: four,\n      children: \" Click To / by 5 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", msg, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", rate * counter, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", rate * counter + 50, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", rate * 50 + counter, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), user.map((name, index) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", name, \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 23\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Myhook1, \"/nGHud6t1JxxIVWCaOg7tFq03yY=\");\n_c = Myhook1;\nexport default Myhook1;\nvar _c;\n$RefreshReg$(_c, \"Myhook1\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Myhook1","_s","citylist","Bangalore","Mumbai","a","b","counter","updateCounter","msg","updateMsg","user","updateUser","one","two","three","four","rate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","name","index","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/UI developer/react/project1/src/hooks/hook1.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Myhook1 = () => {\r\n    let citylist = [\"Bangalore\", \"Mumbai\", \"Pune\", \"Chennai\"];\r\n    const [Bangalore, Mumbai, a, b] = citylist;\r\n    \r\n    //console.log(useState()); //[undefined,f]\r\n    //let [abc, xyz] = [undefined, f];\r\n    //abc ?\r\n    //xyz ?\r\n    //let[x, y] = [100, f];\r\n\r\n    let [counter, updateCounter] = useState(1100);\r\n    let [msg, updateMsg] = useState(\"\");\r\n    let [user, updateUser] = useState(['Kumar', 'Amar', 'Sunil', 'Sam']);\r\n\r\n    const one =()=> {\r\n        updateCounter(counter + 10);\r\n        updateMsg(\"The Counter is incresed - \"+counter);\r\n        \r\n    }\r\n\r\n    const two =()=> {\r\n        updateCounter(counter - 5);\r\n        updateMsg(\"Sorry, The Counter is moving down - \"+counter);\r\n    }\r\n\r\n    const three =()=> {\r\n        updateCounter(counter * 5);\r\n        \r\n    }\r\n\r\n    const four =()=> {\r\n        updateCounter(counter / 5);\r\n        \r\n    }\r\n\r\n    let rate = 10;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1> How to use useState() Hooks & What is State Management </h1>\r\n            <p> { citylist[0] } </p>\r\n            <p> { Bangalore } </p>\r\n            <p> { a } </p>\r\n            <p> { b } </p>\r\n            <h1> The Counter is : {counter} </h1>\r\n            <button onClick={ one }> Click To + by 10 </button>\r\n            <button onClick={ two }> Click To - by 5 </button>\r\n            <button onClick={ three }> Click To * by 5 </button>\r\n            <button onClick={four}> Click To / by 5 </button>\r\n\r\n            <h2> {msg} </h2>\r\n\r\n            <p> { rate * counter } </p>\r\n            <p> { rate * counter + 50 } </p>\r\n            <p> {rate * 50 + counter} </p>\r\n            {\r\n                user.map((name, index) => {\r\n                  return(\r\n                      <p key={index}> {name} </p>\r\n                )  \r\n                })\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Myhook1;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}